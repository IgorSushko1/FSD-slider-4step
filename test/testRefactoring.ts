// eslint-disable-next-line no-unused-vars
import { expect, assert } from 'chai';
// eslint-disable-next-line no-unused-vars
import { it, describe } from 'mocha';
// eslint-disable-next-line no-unused-vars
// eslint-disable-next-line import/no-unresolved
import ViewHorizontal from '../src/is_slider/viewRefactoring';

describe('Тестирование View, рефакторинг первого варианта слайдера, по всем правилам',
  () => {
    const view = new ViewHorizontal();

    it('Функция, запускающая работу вью - его построение, отображение, навешивание событий', () => {
      assert.isOk(view.startView());
    });

    it('Команда, принимающая от контроллера стартовые данные', () => {
      assert.isOk(view.getStartingConditions());
    });

    it('Команда, записывающая каждую полученную единицу данных в соответствующую переменную view', () => {
      assert.isOk(view.setView());
    });

    it('Функция, которая создает DOM элементы в переменной', () => {
      assert.isOk(view.createDOM());
    });

    it('Функция, которая создает переменные для обращения к элементам', () => {
      assert.isOk(view.createVariablesFromDOM());
    });

    it('Функция, навешивающая событие на ползунок при нажатии на него', () => {
      assert.isOk(view.pressEventOnSlider());
    });

    it('Функция, навешивающая событие на ползунок при перемещении мыши с зажатой клавишей над ползунком', () => {
      assert.isOk(view.moveEventOnSlider());
    });

    it('Функция, которая вычисляет координаты мыши', () => {
      assert.isOk(view.calcMousePosition());
    });

    it('Функция, которая перезаписывает переменную значением того DOM-элемента, с которым в данный момент работает пользователь', () => {
      assert.isOk(view.writeSelectedSlider());
    });

    it('Функция, которая затирает переменную, содержащую ссылку на тот ползунок, с которым работал пользователь', () => {
      assert.isOk(view.clearSelectedSlider());
    });

    it('Функция, которая вычисляет шаг в деньгах', () => {
      assert.isOk(view.calcMoneyStep());
    });

    it('Функция, которая вычисляет шаг в количестве товара', () => {
      assert.isOk(view.calcProductStep());
    });

    it('Функция, которая вычисляет шаг в единицах', () => {
      assert.isOk(view.calcPixelStep());
    });

    it('Функция, которая помещает значения в поле для отображения выбранных границ денег/товара', () => {
      assert.isOk(view.showMoneyScreen(whichScreen, whichAmount));
    });

    it('Функция, которая разрешает или не разрешает перемещение слайдера на данную позицию за мышкой', () => {
      assert.isOk(view.canMoveToPosition());
    });

    it('Функция, которая вычисляет позицию для слайдера в зависимости от координат мыши', () => {
      assert.isOk();
    });

    it('Функция, которая записывает координаты мыши в переменную', () => {
      assert.isOk();
    });

    it('Функция, которая перемещает ползунок', () => {
      assert.isOk();
    });

    it('Функция, которая вычисляет значения в пикселях при использовании шагов и создает перемунную с массивом этих данных', () => {
      assert.isOk();
    });

    it('Функция, которая вычисляет ближайший шаг в зависимости от координаты мыши', () => {
      assert.isOk();
    });

    it('Функция, сравнение положения мыши и граничных значений слайдера в пикселях', () => {
      assert.isOk();
    });

    it('Функция, которая перемещает полоску за ползунком', () => {
      assert.isOk();
    });

    it('Функция, которая находит количество ползунков', () => {
      assert.isOk();
    });

    it('Функция, которая сохраняет в переменную ссылку на первый и последний ползунок', () => {
      assert.isOk();
    });

    it('Функция, которая вычисляет границы слайдера в пикселях', () => {
      assert.isOk();
    });

    it('Функция, которая переопределяет направление вычислений в зависимости от того, горизонтальный или вертикальный вид', () => {
      assert.isOk();
    });

    it('', () => {
      assert.isOk();
    });

    it('', () => {
      assert.isOk();
    });

    it('', () => {
      assert.isOk();
    });

    it('', () => {
      assert.isOk();
    });

    it('', () => {
      assert.isOk();
    });

    it('', () => {
      assert.isOk();
    });
  });
